@inherits LayoutComponentBase
@inject ICategoryDataService CategoryDataService
@inject IHomeDataService HomeDataService
@inject NavigationManager NavigationManager
@inject IAccountDataService AccountDataService
@inject ICartDataService CartDataService
@inject IBreakpointService BreakpointListener
@inject IStringLocalizer<Resource> Loc
@inject ILocalStorageService LocalStorage
@inject IInformationDataService InformationDataService

@using System.Globalization

@using System.Net
<MudThemeProvider Theme="MyCustomTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudRTLProvider RightToLeft="@_RTL">
<MudLayout>
@*    <MudGrid Justify="Justify.Center" Spacing="1">


        <!---AppBar-->
        <MudItem sm="12" xs="12" Style="padding:0">*@
    <MudAppBar DisableGutters="true" Elevation="0">
        <MudGrid>
            <MudAppBar  Fixed="false" Color="Color.Primary" Elevation="0" Style="padding-bottom:10px;"  Class="top-app-bar">

                @if (breakPoint < Breakpoint.Lg)
                {
                        <MudPopover @bind-Open="CartPopoverOpen" OverflowBehavior="OverflowBehavior.FlipAlways" Direction="Direction.Right"
                                AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" OffsetY="true" RelativeWidth="false" Style="z-index:500" Class="pa-0 ma-0">
                            <div class="pa-5" style="width:auto; max-width:100vw">
                                @*<MudGrid Class="pa-5" Spacing="2" Justify="Justify.FlexEnd" >*@
                                <MudItem xs="12" xxl="12" Class="d-flex flex-grow-1 gap-4">
                                    <MudText Typo="Typo.h6" Class="pr-5">@Loc["appbar_cart_text"]</MudText>
                                    <MudSpacer />
                                    <MudIconButton OnClick="CloseOverlay" Icon="@Icons.Outlined.Close" Class="pa-0 pl-5"></MudIconButton>
                                </MudItem>
                                @if (Cart.total_product_count > 0)
                                {
                                    <MudItem xs="12" xxl="12" Class="py-4 mt-3" Style="max-height:300px; overflow-y:scroll; overflow-x:hidden;">
                                        <CascadingValue Value="this">
                                            @foreach (var product in Cart.products)
                                            {
                                                <CartItemComponent Product="@product" />
                                            }
                                        </CascadingValue>
                                    </MudItem>

                                    <MudItem xs="12" xxl="12" Class="pt-3">
                                        <MudText Typo="Typo.body2">@Loc["order-total"]</MudText>
                                        <MudText Typo="Typo.h6">@Cart.total</MudText>
                                    </MudItem>

                                    <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                       FullWidth="true" Class="my-2" Size="Size.Large" OnClick="Checkout">@Loc["checkout"]</MudButton>
                                    <MudButton Variant="Variant.Filled" Color="Color.Dark"
                                       FullWidth="true" Class="my-2" Size="Size.Large" OnClick="CloseOverlay">@Loc["continue-shopping"]</MudButton>
                                }
                                @* </MudGrid>*@
                            </div>
                        </MudPopover>
                        <MudPopover @bind-Open="SpecialPopoverOpen" OverflowBehavior="OverflowBehavior.FlipAlways" Direction="Direction.Top"
                                AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" RelativeWidth="false" Style="z-index:500">
                            <div class="pa-5">
                                <MudItem xs="12" xxl="12" Class="d-flex flex-grow-1 gap-4">
                                    <MudText Typo="Typo.button" Class="pr-5">@Loc["appbar_offer_text"]</MudText>
                                    <MudSpacer />
                                    <MudIconButton OnClick="CloseOverlay" Icon="@Icons.Outlined.Close" Class="pa-0 pl-5"></MudIconButton>
                                </MudItem>
                            </div>
                        </MudPopover>
                    <MudIconButton DisableElevation="true" DisableRipple="true" Icon="@Icons.Material.Filled.Menu"
                               Color="Color.Tertiary" Size="Size.Large" OnClick="@ToggleDrawer" />
                    <MudSpacer />
                }
                <MudLink Href="/" >
                    <MudImage Width="181" Height="65" Fluid="true" Src="images/Logo.png" />
                </MudLink>
@*                <MudMenu FullWidth="true" Class="pr-5 pl-5 align-self-stretch" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft"  >
                    <ActivatorContent>
                        <MudButton Variant="Variant.Outlined" Color="Color.Tertiary" 
                                   Size="Size.Large" Class="ma-0 align-self-stretch rounded-lg" EndIcon="@Icons.Filled.ArrowDropDown" >@LanguageLabel</MudButton>
                    </ActivatorContent>
                    <ChildContent>
                        @foreach(var lang in Languages){
                            <MudMenuItem OnClick="()=>{OnLanguageMenuItemClick(lang);}" OnTouch="()=>{OnLanguageMenuItemClick(lang);}">@lang</MudMenuItem>
                        }
                    </ChildContent>
                </MudMenu>*@
@*                    <MudSelect Placeholder="Select Language" @bind-Value="@Culture"ToStringFunc="@convertFunc" Class="search-bar pr-5 pl-5 align-self-stretch"
                    CloseIcon="@Icons.Material.Filled.Flag" AdornmentColor="Color.Primary" Variant="Variant.Filled"
                               AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                        @foreach (var culture in cultures)
                        {
                            <MudSelectItem Value="culture" />
                        }

                    </MudSelect>
*@
                    <MudMenu Class="mx-5 align-self-stretch" Size="Size.Large" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" Label="@(convertFunc(Culture))"
                    Color="Color.Tertiary" Variant="Variant.Outlined"
                             AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" FullWidth="true">
                        @foreach (var culture in cultures)
                        {
                            <MudMenuItem OnClick="()=>{Culture = culture;}"
                                OnTouch="()=>{Culture = culture;}">@(convertFunc(culture))</MudMenuItem>
                        }
                    </MudMenu>
                    @if (breakPoint > Breakpoint.Md)
                    {
                <MudAutocomplete T="string" Label="@Loc["appbar-search-text"]" @bind-Value="Search" SearchFunc="@Search1" Variant="Variant.Filled"
                                 AdornmentIcon="@Icons.Material.Filled.Search" 
                                 AdornmentColor="Color.Tertiary" Class="search-bar  rounded-lg align-self-stretch" >
                                 
                                 </MudAutocomplete>

                <MudSpacer />


                <MudButton DisableElevation="true" DisableRipple="true" Size="Size.Large" Color="Color.Tertiary" OnClick="OpenSpecialPopOver">
                           <MudBadge Content="0" Visible="false" Overlap="true" Color="Color.Dark">
                    <MudIcon Icon="@Icons.Filled.NotificationsActive" Size="Size.Large" Color="Color.Tertiary"></MudIcon>
                            <MudText Typo="Typo.h6" Color="Color.Tertiary" Style="margin-top:-15px;">@Loc["appbar_offer_text"]</MudText>
                    </MudBadge>
                    <MudPopover @bind-Open="SpecialPopoverOpen" OverflowBehavior="OverflowBehavior.FlipAlways" Direction="Direction.Top"
                                    AnchorOrigin="@(_RTL ?Origin.BottomLeft:Origin.BottomRight)" TransformOrigin="@(_RTL ? Origin.TopLeft:Origin.TopRight)" RelativeWidth="false" Style="z-index:500">
                        <div class="pa-5">
                            <MudItem xs="12" xxl="12" Class="d-flex flex-grow-1 gap-4">
                                    <MudText Typo="Typo.button" Class="pr-5">@Loc["appbar_offer_text"]</MudText>
                                <MudSpacer />
                                <MudIconButton OnClick="CloseOverlay" Icon="@Icons.Outlined.Close" Class="pa-0 pl-5"></MudIconButton>
                            </MudItem>
                        </div>
                    </MudPopover>
                </MudButton>

                    <MudDivider Vertical="true" Light="true" FlexItem="true" Class="ma-3" />
                    <AuthorizeView>
                        <NotAuthorized>
                            <MudButton DisableElevation="true" DisableRipple="true"
                                   Size="Size.Large" Color="Color.Tertiary" OnClick="GoToLogin">
                                <MudBadge Content="0" Visible="false" Overlap="true" Color="Color.Dark">
                                    <MudIcon Icon="@Icons.Outlined.AccountCircle" Size="Size.Large" Color="Color.Tertiary"></MudIcon>
                                        <MudText Typo="Typo.h6" Color="Color.Tertiary" Style="margin-top:-15px;">@Loc["appbar_account_unauthorized_text"]</MudText>
                                </MudBadge>
                            </MudButton>
                          
                        </NotAuthorized>

                        <Authorized>
                            <MudMenu Dense="true" FullWidth="true" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                                <ActivatorContent>
                                    <MudButton DisableElevation="true" DisableRipple="true"
                                               Size="Size.Large" Color="Color.Tertiary">
                                               <MudBadge Content="0" Visible="false" Overlap="true" Color="Color.Dark">
                                            <MudIcon Icon="@Icons.Outlined.AccountCircle" Size="Size.Large" Color="Color.Tertiary"></MudIcon>
                                                <MudText Typo="Typo.h6" Color="Color.Tertiary" Style="margin-top:-15px;">@Loc["appbar_account_text"]</MudText>
                                                   </MudBadge>
                                    </MudButton>
                                </ActivatorContent>
                                <ChildContent>
                                        <MudMenuItem Href="account/orders">@Loc["account-menu-order"]</MudMenuItem>
                                        <MudMenuItem Href="account/credit">@Loc["account-menu-credit"]</MudMenuItem>
                                        <MudMenuItem Href="account/data">@Loc["account-menu-settings"]</MudMenuItem>
                                    <MudMenuItem OnClick="Logout">@Loc["account-menu-logout"]</MudMenuItem>
                                </ChildContent>
                            </MudMenu>
                        </Authorized>

                    </AuthorizeView>
               
                <MudDivider Vertical="true" FlexItem="true" Light="true" Class="ma-3" />
                <MudButton DisableElevation="false" DisableRipple="false" OnClick="OpenCartPopOver">
                    <MudBadge Content="@Cart.total_product_count" Visible="@(Cart.total_product_count>0)" Overlap="true" Color="Color.Dark">
                        <MudIcon Icon="@Icons.Outlined.ShoppingCart" Size="Size.Large" Color="Color.Tertiary"> 
                        </MudIcon>
                            <MudText Typo="Typo.h6" Color="Color.Tertiary" Style="margin-top:-15px;">@Loc["appbar_cart_text"]</MudText>
                    </MudBadge>
                    <MudPopover @bind-Open="CartPopoverOpen" OverflowBehavior="OverflowBehavior.FlipAlways" Direction="Direction.Right"
                                    AnchorOrigin="@(_RTL ?Origin.BottomLeft:Origin.BottomRight)" TransformOrigin="@(_RTL ? Origin.TopLeft:Origin.TopRight)" OffsetY="true" RelativeWidth="false" Style="z-index:500" Class="pa-0 ma-0">
                        <div class="pa-5" style="width:auto; max-width:100vw">
                            @*<MudGrid Class="pa-5" Spacing="2" Justify="Justify.FlexEnd" >*@
                            <MudItem xs="12" xxl="12" Class="d-flex flex-grow-1 gap-4">
                                <MudText Typo="Typo.h6" Class="pr-5">@Loc["appbar_cart_text"]</MudText>
                                <MudSpacer />
                                <MudIconButton OnClick="CloseOverlay" Icon="@Icons.Outlined.Close" Class="pa-0 pl-5"></MudIconButton>
                            </MudItem>
                            @if (Cart.total_product_count > 0)
                            {
                                <MudItem xs="12" xxl="12" Class="py-4 mt-3" Style="max-height:500px; overflow:scroll">
                                    <CascadingValue Value="this">
                                        @foreach (var product in Cart.products)
                                        {
                                            <CartItemComponent Product="@product" />
                                        }
                                    </CascadingValue>
                                </MudItem>

                                <MudItem xs="12" xxl="12" Class="pt-3">
                                    <MudText Typo="Typo.body2">@Loc["order-total"]</MudText>
                                    <MudText Typo="Typo.h6">@Cart.total</MudText>
                                </MudItem>

                                <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                       FullWidth="true" Class="my-2" Size="Size.Large" OnClick="Checkout">@Loc["checkout"]</MudButton>
                                <MudButton Variant="Variant.Filled" Color="Color.Dark"
                                       FullWidth="true" Class="my-2" Size="Size.Large" OnClick="CloseOverlay">@Loc["continue-shopping"]</MudButton>
                            }
                            @* </MudGrid>*@
                        </div>
                    </MudPopover>
                </MudButton>
                    }
            </MudAppBar>
        @*</MudItem>*@
        <!---CategoriesAppBar-->
        @if (breakPoint > Breakpoint.Md)
        {
            @*<MudItem sm="12" xs="12">*@

                <CategoryAppBar Categories="@Categories"/>

              

            @*</MudItem>*@
        }
        </MudGrid>
    </MudAppBar>

            <MudDrawer Class="z-30" @bind-Open="@openDrawer" Elevation="1" ClipMode="DrawerClipMode.Docked">
                <MudPaper Elevation="0" Style="padding-top:10px;" >
                    <MudToolBar>
                        <MudIconButton Icon="@Icons.Material.Outlined.ArrowBack" Color="Color.Primary" Size="Size.Large" OnClick="ToggleDrawer" />
                    <MudSpacer />
                    <MudIconButton DisableElevation="true" DisableRipple="true" Icon="@Icons.Filled.NotificationsActive" Size="Size.Large" Color="Color.Primary" OnClick="()=>{OpenSpecialPopOver(); ToggleDrawer();}">
                    </MudIconButton>
                    <MudSpacer />
                    <MudIconButton DisableElevation="false" DisableRipple="false" Icon="@Icons.Outlined.ShoppingCart" Size="Size.Large" Color="Color.Primary" OnClick="()=>{OpenCartPopOver(); ToggleDrawer();}">
                    </MudIconButton>
                        <MudSpacer />
                        <MudIconButton Icon="@Icons.Outlined.AccountCircle" Color="Color.Primary" Size="Size.Large" Href="/account/orders"  OnClick="ToggleDrawer"/>
                    </MudToolBar>
                </MudPaper>
                
                <MudPaper Width="100%" Class="py-3" Elevation="0" Square="true">
                <MudDivider Style="background-color:#59b210" />
                    <MudNavMenu Color="Color.Primary" Bordered="true" Rounded="true" Dense="false">
                        <MudNavLink Class="mud-nav-group" Href="/" Match="NavLinkMatch.All">@Loc["nav-menu-home"]</MudNavLink>
                        @if (Categories is not null && Categories.Count > 0)
                        {
                            @foreach (var category in Categories)
                            {
                                if (category.Categories?.Count > 0)
                                {
                                    <MudNavGroup Title="@(WebUtility.HtmlDecode(category.Name))" Expanded="false">
                                        @foreach (var subCategory in category.Categories)
                                        {
                                            <MudNavLink Href="@($"/category/{@subCategory.Category_Id}")" Match="NavLinkMatch.All">@(WebUtility.HtmlDecode(subCategory.Name))</MudNavLink>
                                        }

                                    </MudNavGroup>
                                }
                                else
                                {
                                    <MudNavLink Href="@($"/category/{@category.Category_Id}")" Match="NavLinkMatch.All"
                                Class="mud-nav-group">@(WebUtility.HtmlDecode(category.Name))</MudNavLink>
                                }
                            }
                        }
                        <AuthorizeView>
                            <Authorized>
                            <MudDivider Style="background-color:#59b210" />
                            <MudNavLink Class="mud-nav-group" OnClick="Logout">@Loc["account-menu-logout"]</MudNavLink>
                            </Authorized>
                        </AuthorizeView>

                    </MudNavMenu>
                </MudPaper>
            </MudDrawer>
        


@*    </MudGrid>*@


    <MudMainContent>
        <MudOverlay @bind-Visible="OverlayOpen" DarkBackground="true" ZIndex="450" AutoClose="true" OnClick="CloseOverlay" />
        <CascadingValue Value="this">
            <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="pa-0">
                <MudGrid Justify="Justify.Center" Spacing="2">
                    <MudItem Style="justify-content:center; " xs="10" xxl="10" Class="top-app-bar mt-5" >
                        @if (HomeData is not null && HomeData is not default(Home?))

                        {
                            <TopAddCarousel SliderData="@HomeData.Slider" />
                        }
                    </MudItem>
                    <MudItem xs="10" Class="mt-5" Style="justify-content:center;">
                        @Body
                    </MudItem>
                </MudGrid>
            </MudContainer>
        </CascadingValue>

        <MudScrollToTop>
            <MudFab Color="Color.Primary" IconSize="Size.Large" Icon="@Icons.Filled.ArrowCircleUp" />
        </MudScrollToTop>

    </MudMainContent>


    <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="pl-0 pr-0" Style="@($"background:{Colors.Grey.Lighten4}; margin-top:80px; padding-bottom:80px;")">
        <MudGrid Justify="Justify.Center" Class="pt-5">
            <MudItem xs="10" xxl="10">
                <MudGrid>
                        @if (Infos.Count > 0)
                        {
                            <MudItem xs="12" sm="12" md="4">
                                <MudStack>
                                    <MudText Style="@($"color:{Colors.Grey.Default}")" Typo="Typo.subtitle2">@Loc["footer-company"]</MudText>
                                    <MudLink Href="/aboutus" Underline="Underline.None" Class="link pl-5" Color="Color.Info" Typo="Typo.subtitle2">@WebUtility.HtmlDecode(Infos.FirstOrDefault(i=>i.id == 4).title) @*@Loc["footer-about-us"]*@</MudLink>
                                    <MudLink Href="/contactus" Underline="Underline.None" Class="link pl-5" Color="Color.Info" Typo="Typo.subtitle2">@Loc["footer-contact-us"]</MudLink>
                                    <MudLink Href="/termsandconditions" Underline="Underline.None" Class="link pl-5" Color="Color.Info" Typo="Typo.subtitle2">@WebUtility.HtmlDecode(Infos.FirstOrDefault(i=>i.id == 5).title)@*@Loc["footer-terms-conditions"]*@</MudLink>
                                    <MudLink Href="/privacy" Underline="Underline.None" Class="link pl-5" Color="Color.Info" Typo="Typo.subtitle2">@WebUtility.HtmlDecode(Infos.FirstOrDefault(i=>i.id == 3).title)@*@Loc["footer-privacy-policy"]*@</MudLink>
                                </MudStack>
                            </MudItem>
                            <MudItem xs="12" sm="12" md="4">
                                <MudStack>
                                <MudText Style="@($"color:{Colors.Grey.Default}")" Typo="Typo.subtitle2">@Loc["footer-learn-more"]</MudText>
                                <MudLink Href="/howitworks" Underline="Underline.None" Class="link pl-5" Color="Color.Info" Typo="Typo.subtitle2">@WebUtility.HtmlDecode(Infos.FirstOrDefault(i=>i.id == 9).title)@*@Loc["footer-how-it-work"]*@</MudLink>
                                <MudLink Href="/howtobuy" Underline="Underline.None" Class="link pl-5" Color="Color.Info" Typo="Typo.subtitle2">@WebUtility.HtmlDecode(Infos.FirstOrDefault(i=>i.id == 7).title)@*@Loc["footer-how-to-buy"]*@</MudLink>
                                <MudLink Href="/howtopay" Underline="Underline.None" Class="link pl-5" Color="Color.Info" Typo="Typo.subtitle2">@WebUtility.HtmlDecode(Infos.FirstOrDefault(i=>i.id == 8).title)@*@Loc["footer-how-to-pay"]*@</MudLink>
                        </MudStack>
                    </MudItem>
                    }
                    <MudItem xs="12" sm="12" md="4">
                        <MudStack>
                            <MudText Style="@($"color:{Colors.Grey.Default}")" Typo="Typo.subtitle2">@Loc["footer-download"]</MudText>
                            <MudStack Row="true">
                                <MudPaper Class="mud-transparent d-flex justify-center align-center pa-4 pt-0" Style="height:100%" Elevation="0">
                                    <MudLink Href="https://apps.apple.com/eg/app/cobony/id1604234152">
                                        <MudImage Src="images/appstoreicon.png" Alt="IOS" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Center" />
                                    </MudLink>
                                </MudPaper>

                                <MudPaper Class="mud-transparent d-flex justify-center align-center pa-4 pt-0" Style="height:100%" Elevation="0">
                                    <MudLink Href="https://play.google.com/store/apps/details?id=com.rokiba.cobony">
                                        <MudImage Src="images/playstoreicon.png" Alt="ANDRIOD" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Center" />
                                    </MudLink>
                                </MudPaper>
                            </MudStack>
                            <MudText Style="@($"color:{Colors.Grey.Default}")" Typo="Typo.subtitle2">@Loc["footer-meet-us"]</MudText>
                            <MudStack Class="pa-4 pt-0">
                                <MudStack Row="true">
                                        <MudButton Href="https://www.facebook.com/Cobony.eg?mibextid=LQQJ4d"
                                               Target="_blank"
                                               Variant="Variant.Filled"
                                               StartIcon="@Icons.Custom.Brands.Facebook"
                                               EndIcon="@Icons.Filled.ArrowRight"
                                               Color="Color.Tertiary"
                                               Style="@($"color:{Colors.Shades.Black}")"
                                               Size="Size.Large" FullWidth="true">

                                            @Loc["footer-facebook"]
                                    </MudButton>
                                    <MudButton Href="https://instagram.com"
                                               Target="_blank"
                                               Variant="Variant.Filled"
                                               StartIcon="@Icons.Custom.Brands.Instagram"
                                               EndIcon="@Icons.Filled.ArrowRight"
                                               Color="Color.Tertiary"
                                               Style="@($"color:{Colors.Shades.Black}")"
                                               Size="Size.Large" FullWidth="true">
                                            @Loc["footer-instagram"]
                                    </MudButton>
                                </MudStack>
                                <MudButton Href="/contactus"
                                           Variant="Variant.Filled"
                                           StartIcon="@Icons.Filled.HelpCenter"
                                           EndIcon="@Icons.Filled.ArrowRight"
                                           Color="Color.Tertiary"
                                           Style="@($"color:{Colors.Shades.Black}")"
                                           Size="Size.Large" FullWidth="true">

                                        @Loc["footer-customer-service"]
                                </MudButton>
                            </MudStack>
                            <MudText Style="@($"color:{Colors.Grey.Default}")" Typo="Typo.subtitle2">@Loc["footer-payment"]</MudText>
                            <MudStack Row="true">
                                <MudPaper Class="mud-transparent d-flex justify-center align-center pa-4 pt-0" Style="height:100%" Elevation="0">
                                    <MudImage Src="images/credit.png" Alt="credit" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Center" />
                                </MudPaper>
                            </MudStack>
                        </MudStack>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    </MudContainer>




</MudLayout>

</MudRTLProvider>

@code{
    CultureInfo[] cultures = new[]{
        new CultureInfo("en-US"),
        new CultureInfo("ar-EG")
    };

    CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set {
            if (CultureInfo.CurrentCulture != value)
            {
                LocalStorage.SetItemAsync<string>("culture", value.Name);
                NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
                //RefreshCart();
            }
        }
    }
    
    private string convertFunc(CultureInfo ci) {
        if(ci is not null){
            if (string.Equals(ci.Name, "en-US", StringComparison.OrdinalIgnoreCase))
            {
                _RTL = false;
                return "English";
            }
            if (string.Equals(ci.Name, "ar-EG", StringComparison.OrdinalIgnoreCase))
            {
                _RTL = true;
                return "العربيه";
            }
        }
        _RTL = false;
        return "N/A";
    }
}
