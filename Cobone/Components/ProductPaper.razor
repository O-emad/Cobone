@using System.Net
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Resource>  Loc

<MudItem xs="12" sm="12" md="6" lg="4" xl="3" Class="d-flex product-card">
    <MudCard Square="false" Elevation="0" Style="height:auto; align-self:stretch; flex-grow:1; display:grid; border-radius:5px;">
        @*Product Image*@
        <MudCardMedia Height="200" Style="background-size:cover;" Image="@Thumb" />
        <MudCardContent Class="flex-1">
            @*Product Title*@
@*            <MudItem Style="width:100%; aspect-ratio:1">
                <MudImage Src="@Thumb" Fluid="true" ObjectFit="ObjectFit.Cover"/>
            </MudItem>*@
            <MudText Inline="true" Typo="Typo.h6">@(WebUtility.HtmlDecode(Product.Name))</MudText>
                <MudItem xs="12">
                    <MudRating ReadOnly="true" SelectedValue="@((int)Product.Rating)" />
                </MudItem>
                <MudGrid Class="mt-5">
                    <MudChip Label="true" Color="Color.Warning">@OffPercentage% @Loc["percentage-off"]</MudChip>
                </MudGrid>
            </MudCardContent>
            <MudCardActions Class="pa-3" Style="@($"align-self:end; background-color:#59b210; border-radius:0px 0px 5px 5px;")">
                <MudGrid Justify="Justify.FlexStart" Spacing="1" Class="d-flex justify-space-between flex-grow-1 gap-4">
                    <MudItem Class="pa-0 py-0 px-2">
                    @if (Product.Special > 0)
                    {
                        <MudText Align="Align.Left"
                             Typo="Typo.h5" Style="@($"color:{Colors.Shades.White}")">
                            <del style="@($"color:{ Colors.Grey.Lighten1}")">@Product.Price_Formated</del>
                            <br />
                            <ins> @Product.Special_Formated</ins>

                        </MudText>
                    }
                    else
                    {
                        <MudText Align="Align.Left"
                             Typo="Typo.h5" Style="@($"color:{Colors.Shades.White}")">
                            <ins>
                                @Product.Price_Formated
                                <br />
                                <br />
                            </ins>
                        </MudText>

                    }

                </MudItem>

                <MudSpacer></MudSpacer>
                <MudItem Class="pa-0 ma-0 px-2">
                    @*                <MudChip  Label="false" DisableRipple="false" Style="@($"background-color:{Colors.Shades.White}")"
                    Variant="Variant.Text" Size="Size.Large">
                    <MudLink Href="@($"./productinfo/{Product.Product_Id}")" Underline="Underline.None" Color="Color.Default">
                    VIEW DEAL
                    </MudLink>
                    </MudChip>*@
                    <MudChip OnClick="OnViewDealClick" Label="true" Style="@($"background-color:{Colors.Shades.White}")"
                             Variant="Variant.Text" Size="Size.Large">
                        @Loc["view-deal"]
                    </MudChip>
                </MudItem>
            </MudGrid>
        </MudCardActions>
    </MudCard>


</MudItem>



@code{
    [Parameter] public Product Product { get; set; }
    public string Thumb { get; set; }
    public int OffPercentage { get; set; }

    void GetOffPercentage()
    {
        if (Product is not null)
        {
            if (Product.Special == 0)
            {
                OffPercentage = 0;
            }
            if (Product.Price > 0 && Product.Special > 0)
            {

                OffPercentage = (int)(100 - ((Product.Special / Product.Price) * 100));
            }
        }
    }

    protected override void OnParametersSet()
    {
        if (Product is not null)
        {
            if (!string.IsNullOrWhiteSpace(Product.Thumb))
            {
                Thumb = Product.Thumb;
            }
            else
            {
                Thumb = Product.image;

            }
            //StateHasChanged();
        }
        //StateHasChanged();
        GetOffPercentage();
    }

    private void OnViewDealClick()
    {
        NavigationManager.NavigateTo($"./productinfo/{Product.Product_Id}");
    }
}