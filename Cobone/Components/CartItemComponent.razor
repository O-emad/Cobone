@using System.Net
@inject IStringLocalizer<Resource>  Loc
<MudCard Square="false" Outlined="true" Style=" border-radius:25px;" Class="my-2">
    <MudGrid Spacing="0" Justify="Justify.FlexStart">
        <MudItem xs="12" md="6" xxl="6" Class="px-2">
            <MudImage Height="200" Style="object-fit:cover; width:100%" Src="@Product.thumb" />
        </MudItem>
        <MudItem xs="12" md="6" xxl="6" Style="align-self:center;" Class="pa-3">
            <MudText Typo="Typo.body1">@(WebUtility.HtmlDecode(Product.name))</MudText>
            
            <MudStack Row="true" Spacing="0">
                <MudStack Spacing="0">
                        @*<MudText Typo="Typo.h6">@Product.option.FirstOrDefault().value</MudText>*@
                    <MudText Typo="Typo.h6">@Product.price</MudText>
                    <MudText Typo="Typo.h6">@($"{Loc["quantity"]}: {Product.quantity}")</MudText>
                </MudStack>
            <MudSpacer/>
                    <MudIconButton Icon="@Icons.Filled.Delete" Class="px-5" Size="Size.Large" OnClick="DeleteItem" Style="color:#BDBDBD" />
                </MudStack>
            <MudText Typo="Typo.h6">@($"{Loc["order-total"]}: {Product.total}")</MudText>
            
        </MudItem>
    </MudGrid>
</MudCard>


    @code{
    [Parameter] public CartProduct Product { get; set; }
    [Inject] public ICartDataService CartDataService { get; set; }
    [CascadingParameter] public MainLayout MainLayout { get; set; }    
    private async Task DeleteItem(){
        if(CartDataService is not null){
            await CartDataService.DeleteCartItem(Product.key);
            await MainLayout.RefreshCart();
            
        }
    }
}